//! count.js
//! version : 0.1.0
//! authors : Nick Kaye
//! license : MIT
//! www.nickkaye.com/count-js
(function(){function a(a,b){return m.call(a,b)}function b(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function c(a){j.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+a)}function d(a,b){var d=!0;return g(function(){return d&&(c(a),d=!1),b.apply(this,arguments)},b)}function e(a){f(this,a)}function f(a,b){return"undefined"!=typeof b._isACountObject&&(a._isACountObject=b._isACountObject),"undefined"!=typeof b._i&&(a._i=b._i),"undefined"!=typeof b._pf&&(a._pf=b._pf),a}function g(b,c){for(var d in c)a(c,d)&&(b[d]=c[d]);return a(c,"toString")&&(b.toString=c.toString),a(c,"valueOf")&&(b.valueOf=c.valueOf),b}function h(a){var b=a._i;return null===a._i?j.invalid({nullInput:!0}):("number"!=typeof b&&(a._i=Number(b)),new e(a))}function i(a){"undefined"==typeof ender&&(k=n.count,n.count=a?d("Accessing Count through the global scope is deprecated, and will be removed in an upcoming release.",j):j)}var j,k,l="0.1.0",m=Object.prototype.hasOwnProperty,n="undefined"!=typeof global?global:this,o="undefined"!=typeof module&&module.exports;j=function(a){var c;return c={},c._isACountObject=!0,c._i=a,c._pf=b(),h(c)},j.suppressDeprecationWarnings=!1,j.createFromInputFallback=d("count construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/nickckaye/count/issues/1407 for more info.",function(a){a._d=new Date(a._i)}),j.version=l,j.isCount=function(b){return b instanceof e||null!=b&&a(b,"_isACountObject")},j.invalid=function(a){var b=j(0);return null!=a?g(b._pf,a):b._pf.userInvalidated=!0,b},g(j.fn=e.prototype,{camel:function(){return"ThisWillWork"},clone:function(){return j(this)},valueOf:function(){return+this._i},parsingFlags:function(){return g({},this._pf)}}),o?module.exports=j:"function"==typeof define&&define.amd?(define("count",function(a,b,c){return c.config&&c.config()&&c.config().noGlobal===!0&&(n.count=k),j}),i(!0)):i()}).call(this);